"""Create mechanical integrity database schema

Revision ID: 6e891b920f50
Revises: 
Create Date: 2025-08-20 17:22:02.412077

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6e891b920f50'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('equipment',
    sa.Column('tag_number', sa.String(length=50), nullable=False, comment='Unique equipment identifier (e.g., V-101, T-201)'),
    sa.Column('description', sa.String(length=200), nullable=False, comment='Equipment description and service details'),
    sa.Column('equipment_type', sa.Enum('PRESSURE_VESSEL', 'STORAGE_TANK', 'PIPING', 'HEAT_EXCHANGER', name='equipmenttype'), nullable=False, comment='Equipment classification per API standards'),
    sa.Column('design_pressure', sa.Float(), nullable=False, comment='Design pressure in PSI - used for MAWP calculations'),
    sa.Column('design_temperature', sa.Float(), nullable=False, comment='Design temperature in °F - affects material properties'),
    sa.Column('design_thickness', sa.Float(), nullable=False, comment='Original design thickness in inches - baseline for remaining life'),
    sa.Column('material_specification', sa.String(length=50), nullable=False, comment='Material specification (e.g., SA-516-70, SA-106-B)'),
    sa.Column('corrosion_allowance', sa.Float(), nullable=False, comment='Design corrosion allowance in inches (typically 0.125)'),
    sa.Column('service_description', sa.String(length=100), nullable=False, comment='Process service (e.g., Crude Oil, Steam, Cooling Water)'),
    sa.Column('installation_date', sa.DateTime(timezone=True), nullable=False, comment='Equipment installation date for age calculations'),
    sa.Column('last_inspection_date', sa.DateTime(timezone=True), nullable=True, comment='Date of most recent inspection'),
    sa.Column('next_inspection_due', sa.DateTime(timezone=True), nullable=True, comment='Next required inspection date per API standards'),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_equipment_tag_number'), 'equipment', ['tag_number'], unique=True)
    op.create_table('inspection_records',
    sa.Column('equipment_id', sa.String(length=36), nullable=False, comment='Reference to equipment being inspected'),
    sa.Column('inspection_date', sa.DateTime(timezone=True), nullable=False, comment='Date of inspection - critical for corrosion rate calculations'),
    sa.Column('inspection_type', sa.String(length=20), nullable=False, comment='Inspection method used (UT, VT, etc.)'),
    sa.Column('inspector_name', sa.String(length=100), nullable=False, comment='Certified inspector name for traceability'),
    sa.Column('inspector_certification', sa.String(length=50), nullable=True, comment='Inspector certification number (SNT-TC-1A Level II/III)'),
    sa.Column('report_number', sa.String(length=50), nullable=False, comment='Unique inspection report identifier'),
    sa.Column('thickness_readings', sa.JSON(), nullable=False, comment='Array of thickness readings with CML locations'),
    sa.Column('min_thickness_found', sa.DECIMAL(precision=6, scale=3), nullable=False, comment='Minimum thickness found - critical for fitness assessment'),
    sa.Column('avg_thickness', sa.DECIMAL(precision=6, scale=3), nullable=False, comment='Average thickness across all CMLs'),
    sa.Column('corrosion_type', sa.String(length=20), nullable=True, comment='Type of corrosion observed'),
    sa.Column('corrosion_rate_calculated', sa.DECIMAL(precision=8, scale=5), nullable=True, comment='Calculated corrosion rate in inches/year'),
    sa.Column('confidence_level', sa.DECIMAL(precision=5, scale=2), nullable=False, comment='Statistical confidence in corrosion rate (0-100%)'),
    sa.Column('findings', sa.Text(), nullable=True, comment='Detailed inspection findings and observations'),
    sa.Column('recommendations', sa.Text(), nullable=True, comment='Inspector recommendations for follow-up actions'),
    sa.Column('follow_up_required', sa.Boolean(), nullable=False, comment='Flag indicating if immediate follow-up is required'),
    sa.Column('ai_processed', sa.Boolean(), nullable=False, comment='Whether this inspection was processed by AI document analyzer'),
    sa.Column('ai_extraction_data', sa.JSON(), nullable=True, comment='Raw AI extraction results for audit trail'),
    sa.Column('ai_confidence_score', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='AI confidence score for extracted data (0-100%)'),
    sa.Column('verified_by', sa.String(length=100), nullable=True, comment='Name of person who verified AI-extracted data'),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp of human verification'),
    sa.Column('document_reference', sa.String(length=255), nullable=True, comment='Path to source inspection report/document'),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inspection_records_equipment_id'), 'inspection_records', ['equipment_id'], unique=False)
    op.create_index(op.f('ix_inspection_records_inspection_date'), 'inspection_records', ['inspection_date'], unique=False)
    op.create_index(op.f('ix_inspection_records_report_number'), 'inspection_records', ['report_number'], unique=False)
    op.create_table('api579_calculations',
    sa.Column('inspection_record_id', sa.String(length=36), nullable=False, comment='Source inspection for this calculation'),
    sa.Column('calculation_type', sa.String(length=50), nullable=False, comment='Type of API 579 assessment (Level 1, 2, or 3)'),
    sa.Column('calculation_method', sa.String(length=100), nullable=False, comment='Specific calculation method used'),
    sa.Column('performed_by', sa.String(length=100), nullable=False, comment='Engineer who performed the calculation'),
    sa.Column('reviewed_by', sa.String(length=100), nullable=True, comment='Engineer who reviewed the calculation'),
    sa.Column('input_parameters', sa.JSON(), nullable=False, comment='Complete set of input parameters used in calculation'),
    sa.Column('minimum_required_thickness', sa.DECIMAL(precision=6, scale=3), nullable=False, comment='Minimum required thickness (t_min) in inches'),
    sa.Column('remaining_strength_factor', sa.DECIMAL(precision=6, scale=4), nullable=False, comment='Remaining Strength Factor (RSF) - critical safety metric'),
    sa.Column('maximum_allowable_pressure', sa.DECIMAL(precision=8, scale=2), nullable=False, comment='Maximum Allowable Working Pressure (MAWP) in PSI'),
    sa.Column('remaining_life_years', sa.DECIMAL(precision=6, scale=2), nullable=True, comment='Estimated remaining life in years'),
    sa.Column('next_inspection_date', sa.DateTime(timezone=True), nullable=True, comment='Recommended next inspection date based on calculations'),
    sa.Column('fitness_for_service', sa.String(length=20), nullable=False, comment='Overall fitness assessment: FIT, UNFIT, or CONDITIONAL'),
    sa.Column('risk_level', sa.String(length=20), nullable=False, comment='Risk assessment: LOW, MEDIUM, HIGH, CRITICAL'),
    sa.Column('recommendations', sa.Text(), nullable=False, comment='Engineering recommendations based on calculations'),
    sa.Column('warnings', sa.Text(), nullable=True, comment='Critical warnings requiring immediate attention'),
    sa.Column('assumptions', sa.JSON(), nullable=False, comment='List of assumptions made in calculations'),
    sa.Column('confidence_score', sa.DECIMAL(precision=5, scale=2), nullable=False, comment='Overall confidence in calculation results (0-100%)'),
    sa.Column('uncertainty_factors', sa.JSON(), nullable=True, comment='Factors contributing to calculation uncertainty'),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['inspection_record_id'], ['inspection_records.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api579_calculations_inspection_record_id'), 'api579_calculations', ['inspection_record_id'], unique=False)
    op.create_table('thickness_readings',
    sa.Column('inspection_record_id', sa.String(length=36), nullable=False, comment='Parent inspection record'),
    sa.Column('cml_number', sa.String(length=20), nullable=False, comment='Condition Monitoring Location identifier (e.g., CML-01)'),
    sa.Column('location_description', sa.String(length=200), nullable=False, comment='Detailed description of measurement location'),
    sa.Column('grid_reference', sa.String(length=10), nullable=True, comment='Grid reference for location mapping (e.g., A-1, B-3)'),
    sa.Column('thickness_measured', sa.DECIMAL(precision=6, scale=3), nullable=False, comment='Current measured thickness in inches (±0.001 precision)'),
    sa.Column('previous_thickness', sa.DECIMAL(precision=6, scale=3), nullable=True, comment='Previous inspection thickness for corrosion rate calculation'),
    sa.Column('design_thickness', sa.DECIMAL(precision=6, scale=3), nullable=False, comment='Original design thickness at this location'),
    sa.Column('metal_loss_total', sa.DECIMAL(precision=6, scale=3), nullable=True, comment='Total metal loss from original thickness (inches)'),
    sa.Column('metal_loss_period', sa.DECIMAL(precision=6, scale=3), nullable=True, comment='Metal loss since previous inspection (inches)'),
    sa.Column('corrosion_rate_local', sa.DECIMAL(precision=8, scale=5), nullable=True, comment='Local corrosion rate at this CML (inches/year)'),
    sa.Column('measurement_confidence', sa.DECIMAL(precision=5, scale=2), nullable=False, comment='Measurement confidence based on surface conditions'),
    sa.Column('surface_condition', sa.String(length=50), nullable=True, comment='Surface condition affecting measurement accuracy'),
    sa.Column('temperature_compensation', sa.DECIMAL(precision=6, scale=3), nullable=True, comment='Temperature compensation applied to measurement'),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['inspection_record_id'], ['inspection_records.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_thickness_readings_inspection_record_id'), 'thickness_readings', ['inspection_record_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_thickness_readings_inspection_record_id'), table_name='thickness_readings')
    op.drop_table('thickness_readings')
    op.drop_index(op.f('ix_api579_calculations_inspection_record_id'), table_name='api579_calculations')
    op.drop_table('api579_calculations')
    op.drop_index(op.f('ix_inspection_records_report_number'), table_name='inspection_records')
    op.drop_index(op.f('ix_inspection_records_inspection_date'), table_name='inspection_records')
    op.drop_index(op.f('ix_inspection_records_equipment_id'), table_name='inspection_records')
    op.drop_table('inspection_records')
    op.drop_index(op.f('ix_equipment_tag_number'), table_name='equipment')
    op.drop_table('equipment')
    # ### end Alembic commands ###